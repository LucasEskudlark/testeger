@inject ITestCaseResultService TestCaseResultService

@code {
    [Parameter]
    public string TestCaseId { get; set; }

    private IEnumerable<TestCaseResultViewModel> TestCaseResults { get; set; }
    private bool isInitialized;

    protected override async Task OnInitializedAsync()
    {
        TestCaseResults = await TestCaseResultService.GetResultsByTestCaseIdAsync(TestCaseId);
        isInitialized = true;
    }
}

@if (isInitialized)
{
    @if (!TestCaseResults.Any())
    {
        <small class="description-text"><i>Tests results will be shown here after the test is done.</i></small>
    }
    else
    {
        @foreach (var result in TestCaseResults.OrderBy(x => x.Number))
        {
            if (result.ActualResult != null && result.IsFinished == true)
            {
                <TestResultDisplay Result="result" />
            }
        }
    }
}

