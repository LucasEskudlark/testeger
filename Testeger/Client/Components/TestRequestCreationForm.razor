@inject DialogService DialogService

<EditForm Model="@testRequestViewModel" OnValidSubmit="@NotifyParent" class="p-3">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <div class="col-12">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="testRequestViewModel.Title" />
            <ValidationMessage For="@(() => testRequestViewModel.Title)" />
        </div>
    </div>

    <div class="mb-3 row">
        <div class="col-4">
            <label for="duedate" class="form-label">Due Date</label>
            <RadzenDatePicker @bind-Value="testRequestViewModel.DueDate" Min="@(DateTime.Today)" DateFormat="dd/MM/yyyy" id="duedate"/>
            <ValidationMessage For="@(() => testRequestViewModel.DueDate)" />
        </div>

        <div class="col-4">
            <label for="priorityLevel" class="form-label">Priority Level</label>
            <InputSelect id="priorityLevel" class="form-select" @bind-Value="testRequestViewModel.PriorityLevel">
                @foreach (var priority in Enum.GetValues<PriorityLevel>())
                {
                    <option value="@priority">@priority</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => testRequestViewModel.PriorityLevel)" />
        </div>
    </div>

    <div class="mb-3 row">
        <div class="col-10">
            <label for="storylink" class="form-label">Story link</label>
            <InputText id="storylink" class="form-control" @bind-Value="testRequestViewModel.StoryLink" />
            <ValidationMessage For="@(() => testRequestViewModel.StoryLink)" />
        </div>
    </div>

    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputTextArea id="description" class="form-control" @bind-Value="testRequestViewModel.Description" />
        <ValidationMessage For="@(() => testRequestViewModel.Description)" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    [Parameter]
    public EventCallback<TestRequest> OnFormSubmitted { get; set; }

    private TestRequestCreationViewModel testRequestViewModel = new();

    private async Task NotifyParent()
    {
        var testRequestEntity = GetTestRequest();
        DialogService.Close(true);
        await OnFormSubmitted.InvokeAsync(testRequestEntity);
        testRequestViewModel = new();
    }

    private TestRequest GetTestRequest()
    {
        return new TestRequest
            {
                Id = Guid.NewGuid().ToString(),
                Title = testRequestViewModel.Title,
                Description = testRequestViewModel.Description,
                Status = RequestStatus.Waiting,
                PriorityLevel = testRequestViewModel.PriorityLevel,
                DueDate = testRequestViewModel.DueDate,
                CreatedDate = DateTime.Now,
                AssignedTo = new User {Name = "Lucas" }, // Temporary
                CreatorId = "Lucas"
            };
    }
}

<style>
    .rz-dialog {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .rz-dialog-title {
        color: white;
        padding: 10px 15px;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }

    .rz-dialog-titlebar {
        background-color: var(--rz-primary);
    }

    .rz-dialog-content {
        padding: 10px;
    }

    .rz-dialog-footer {
        padding: 10px 20px;
        background-color: #f8f9fa;
    }

    .form-label {
        font-weight: 600;
        color: #333;
    }

    .input {
        border-radius: 5px;
    }

    .btn-primary {
        background-color: var(--rz-primary);
        border-color: var(--rz-primary);
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

    .validation-message {
        color: #dc3545;
        font-size: 0.875em;
    }

    #description{
        resize: none;
        height: 200px;
    }

    #duedate {
        border: 1px solid #ced4da;
        border-radius: .25rem;
    }
</style>