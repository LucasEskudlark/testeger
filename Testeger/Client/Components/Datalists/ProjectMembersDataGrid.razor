<RadzenDataGrid AllowFiltering="false"
                AllowColumnResize="false"
                AllowAlternatingRows="false"
                FilterMode="FilterMode.Advanced"
                AllowSorting="false"
                PageSize="5"
                AllowPaging="true"
                PagerHorizontalAlign="HorizontalAlign.Left"
                ShowPagingSummary="true"
                Data="@Users"
                ColumnWidth="300px"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                SelectionMode="DataGridSelectionMode.Single"
                @bind-Value=@SelectedUsers>

    <Columns>
        <RadzenDataGridColumn Property="UserName" Title="Name" Frozen="true" Width="100px" />
        <RadzenDataGridColumn Property="Email" Title="E-mail" Width="200px" />
        @* <RadzenDataGridColumn Property="Role" Title="Role" Width="80px" /> *@
    </Columns>
</RadzenDataGrid>

@code {
    [Parameter]
    public IEnumerable<UserViewModel> Users { get; set; }

    [Parameter]
    public EventCallback<IList<UserViewModel>> SelectedUsersChanged { get; set; }

    private UserViewModel User { get; set; }

    private IList<UserViewModel> _selectedUsers;

    private IList<UserViewModel> SelectedUsers
    {
        get => _selectedUsers;
        set
        {
            if (!Equals(_selectedUsers, value))
            {
                _selectedUsers = value;
                SelectedUsersChanged.InvokeAsync(_selectedUsers);
            }
        }
    }
}
