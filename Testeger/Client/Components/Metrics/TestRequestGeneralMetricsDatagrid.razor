@using Testeger.Client.ViewModels.TestRequests

<h6>Test Request general numbers</h6>
<RadzenCard>
    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>Total amount of Test Requests:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @FilteredRequests.Count()
        </div>
    </div>

    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>Average time to complete a test request:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @TestRequestMetricsCalculator.CalculateAverageTestRequestCompletionTimeInHours(FilteredRequests).ToHoursAndMinutes()
        </div>
    </div>

    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>N° of requests finished after Due Date:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @TestRequestMetricsCalculator.CountRequestsCompletedAfterDueDate(FilteredRequests)
        </div>
    </div>

    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>N° of requests finished before Due Date:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @TestRequestMetricsCalculator.CountRequestsCompletedBeforeDueDate(FilteredRequests)
        </div>
    </div>

    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>N° of requests that needed to be fixed:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @TestRequestMetricsCalculator.CountRequestsThatNeededToBeFixed(FilteredRequests)
        </div>
    </div>

    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>N° of requests that did not need to be fixed:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @TestRequestMetricsCalculator.CountRequestsThatDidntNeedToBeFixed(FilteredRequests)
        </div>
    </div>

    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>Average test requests lead time:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @TestRequestMetricsCalculator.CalculateAverageLeadTime(FilteredRequests).ToHoursAndMinutes()
        </div>
    </div>

    <div class="row card d-flex flex-row p-2 my-1">
        <div class="col-9 right-divider">
            <p>Average test requests cycle time:</p>
        </div>
        <div class="col-3 d-flex justify-content-center">
            @TestRequestMetricsCalculator.CalculateCycleTime(FilteredRequests).ToHoursAndMinutes()
        </div>
    </div>
</RadzenCard>

@code {
    [Parameter]
    public required IEnumerable<TestRequestViewModel> TestRequests { get; set; }

    [Parameter]
    public DateTime? FilterDate { get; set; }

    private IEnumerable<TestRequestViewModel> FilteredRequests { get; set; } = Enumerable.Empty<TestRequestViewModel>();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        FilteredRequests = TestRequestMetricsCalculator.FilterTestRequestsByDate(TestRequests, FilterDate);
    }
}