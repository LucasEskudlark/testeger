@using Testeger.Client.Services.TestRequests
@using Testeger.Shared.DTOs.Requests.CreateTestRequest
@inject DialogService DialogService
@inject ITestRequestServiceNV TestRequestService

@if (ProjectId is not null)
{
    <EditForm Model="@testRequestViewModel" OnValidSubmit="@NotifyParent" class="p-3">
        <DataAnnotationsValidator />
        <div class="mb-3 row">
            <div class="col-12">
                <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">Title</RadzenText>
                <InputText id="title"
                           class="form-control inputtext"
                           placeholder="Enter a concise title for the test request."
                           @bind-Value="testRequestViewModel.Title" />
                <ValidationMessage For="@(() => testRequestViewModel.Title)" />
            </div>
        </div>

        <div class="mb-3 row">
            <div class="col-4">
                <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">Due Date</RadzenText>
                <RadzenDatePicker @bind-Value="testRequestViewModel.DueDate"
                                  Min="@(DateTime.Today)"
                                  DateFormat="dd/MM/yyyy"
                                  Placeholder="Enter request due date"
                                  id="duedate" />
                <ValidationMessage For="@(() => testRequestViewModel.DueDate)" />
            </div>

            <div class="col-4">
                <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">Priority Level</RadzenText>
                <InputSelect id="priorityLevel"
                             class="form-select inputtext"
                             @bind-Value="testRequestViewModel.PriorityLevel">
                    @foreach (var priority in Enum.GetValues<Testeger.Shared.DTOs.Enumerations.PriorityLevel>())
                    {
                        <option value="@priority">@priority</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => testRequestViewModel.PriorityLevel)" />
            </div>
        </div>

        <div class="mb-3 row">
            <div class="col-10">
                <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">Story link</RadzenText>
                <InputText id="storylink"
                           class="form-control inputtext"
                           placeholder="Enter the URL to the story in your project management tool"
                           @bind-Value="testRequestViewModel.StoryLink" />
                <ValidationMessage For="@(() => testRequestViewModel.StoryLink)" />
            </div>
        </div>

        <div class="mb-3">
            <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.H3">Description</RadzenText>
            <InputTextArea id="description"
                           class="form-control textarea"
                           placeholder="Provide a detailed description of the test request, what was changed, impacts on existing features..."
                           @bind-Value="testRequestViewModel.Description" />
            <ValidationMessage For="@(() => testRequestViewModel.Description)" />
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    [Parameter]
    public EventCallback OnFormSubmitted { get; set; }

    [Parameter]
    public string ProjectId { get; set; }

    private TestRequestCreationViewModel testRequestViewModel = new();

    private async Task NotifyParent()
    {
        testRequestViewModel.ProjectId = ProjectId;
        testRequestViewModel.UserId = Guid.NewGuid().ToString();
        await TestRequestService.CreateTestRequestAsync(testRequestViewModel);
        DialogService.Close(true);
        await OnFormSubmitted.InvokeAsync();
        testRequestViewModel = new();
    }
}

<style>
    .form-label {
        font-weight: 600;
        color: #333;
    }

    .input {
        border-radius: 5px;
    }

    .btn-primary {
        background-color: var(--rz-primary);
        border-color: var(--rz-primary);
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

    .validation-message {
        color: #dc3545;
        font-size: 0.875em;
    }

    #duedate {
        border: 1px solid #ced4da;
        border-radius: .25rem;
    }

    .textarea {
        height: 200px;
        resize: none;
        font-size: 15px;
    }
</style>