@inject TestRequestService TestRequestService

<RadzenDataList AllowVirtualization="false" AllowPaging="true"
                Data="@Requests" TItem="TestRequest" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" >
    <Template Context="Request">
        <RadzenCard Style="width: 100%; max-height: 50px !important; margin: 0 !important; padding: 0 !important;">
            <RadzenRow Gap="0" Style="padding: 0;">
                <RadzenColumn Size="3" SizeLG="3" class="@GetBackgroundColor(Status)" Style="max-height: 50px;">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" class="@GetTextColor(Status)">@(Request.Title)</RadzenText>
                </RadzenColumn>
                <RadzenColumn Size="7" SizeLG="8" Class="rz-p-2" Style="max-height: 50px;">
                    <RadzenRow Gap="5">
                        <RadzenColumn Size="2" SizeMD="2" SizeLG="2" Class="d-flex flex-column justify-content-center">
                            <RadzenText TextStyle="TextStyle.Subtitle2" Class="rz-mb-0" TagName="TagName.H5">Number</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@(Request.Number)</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size="2" SizeMD="2" SizeLG="2" Class="d-flex flex-column justify-content-center">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="rz-mb-0">Priority</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@(Request.PriorityLevel)</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size="2" SizeMD="2" SizeLG="3" Class="d-flex flex-column justify-content-center">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="rz-mb-0">Status</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@(Request.Status)</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size="3" SizeMD="3" SizeLG="3" Class="d-flex flex-column justify-content-center">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="rz-mb-0">Assigned To</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@(Request.CreatorId)</RadzenText>
                        </RadzenColumn>
                        <RadzenColumn Size="3" SizeMD="3" SizeLG="3" Class="d-flex flex-column justify-content-center">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H5" Class="rz-mb-0">Due Date</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@(Request.DueDate.ToString("dd/MM/yyyy"))</RadzenText>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenColumn>
                <RadzenColumn Size="2" SizeLG="1" Class="rz-p-2 d-flex flex-column justify-content-center" Style="max-height: 50px;">
                    <RadzenButton Click="@(() => OpenTestRequest(Request))" Text="More" Size="ButtonSize.Small" Style="width: 50%; height: 50%; font-size: 12px !important;" />
                </RadzenColumn>
            </RadzenRow>
        </RadzenCard>
    </Template>
</RadzenDataList>

@code {
    [Parameter]
    public List<TestRequest>? Requests { get; set; }

    public TestRequest Request { get; set; }

    [Parameter]
    public RequestStatus Status { get; set; }

    [Inject]
    protected DialogService DialogService { get; set; }

    public async Task OpenTestRequest(TestRequest testRequest)
    {
        await DialogService.OpenAsync<DialogTestRequestPage>($"Request Number: {testRequest.Number}",
               new Dictionary<string, object>() { { "RequestId", testRequest.Id } },
               new DialogOptions() { Width = "700px", Height = "512px", Resizable = false, Draggable = true });
        Console.WriteLine("Order Dialog Opened");
    }

    public RequestStatus GetStatus()
    {
        return Status;
    }

    private string GetTextColor(RequestStatus status)
    {
        switch (status)
        {
            case RequestStatus.InProgress:
                return "rz-color-secondary";
            case RequestStatus.ReadyForTesting:
                return "rz-color-warning";
            case RequestStatus.FixingIssues:
                return "rz-color-danger";
            case RequestStatus.Completed:
                return "rz-color-success";
            default:
                return "rz-color-base-800";
        }
    }

    private string GetBackgroundColor(RequestStatus status)
    {
        switch (status)
        {
            case RequestStatus.InProgress:
                return "rz-p-4 rz-text-wrap rz-background-color-secondary-lighter";
            case RequestStatus.ReadyForTesting:
                return "rz-p-4 rz-text-wrap rz-background-color-warning-lighter";
            case RequestStatus.FixingIssues:
                return "rz-p-4 rz-text-wrap rz-background-color-danger-lighter";
            case RequestStatus.Completed:
                return "rz-p-4 rz-text-wrap rz-background-color-success-lighter";
            default:
                return "rz-p-4 rz-text-wrap rz-background-color-base-500";
        }
    }
}

<style>
    li {
        padding: 0px !important;
    }
</style>
