@inherits LayoutComponentBase
@inject ProjectService ProjectService

<RadzenLayout Style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body'">
    <RadzenHeader>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <RadzenLabel Text="Testeger" />
        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebarExpanded">
        <RadzenPanelMenu>
            <RadzenPanelMenuItem Text="Home" Icon="home" />
            <RadzenPanelMenuItem Text="Users" Icon="account_box" />
            <RadzenPanelMenuItem Text="Create Project" Icon="add" Path="/create-project" />

            @if (ProjectService.GetProjects().Any())
            {
                <RadzenPanelMenuItem Text="Projects">
                    @foreach (var project in ProjectService.GetProjects())
                    {
                        <RadzenPanelMenuItem Text="@project.Name" Path="@GetProjectRoute(project.Id)" />
                    }
                </RadzenPanelMenuItem>
            }
        </RadzenPanelMenu>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>

@code {
    bool sidebarExpanded = true;

    private string GetProjectRoute(string projectId) => $"/project/{projectId}";

    protected override void OnInitialized()
    {
        ProjectService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        ProjectService.OnChange -= StateHasChanged;
    }
}